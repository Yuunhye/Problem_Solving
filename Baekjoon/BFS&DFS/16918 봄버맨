#폭탄 폭발
def bfs(queue) :
    global board
    delta = [(1,0), (-1,0), (0,-1), (0,1)]
    while queue :   
            x,y = queue.popleft()
            board[x][y] = '.'
            for dx,dy in delta :
                nx = x+dx
                ny = y+dy
                if 0<=nx<R and 0<=ny<C :
                    board[nx][ny] = '.'

from collections import deque
import copy

R,C,N = map(int, input().split())
board = []
queue = deque()
for i in range(R) :
    board.append(list(input()))
    for j in range(C) :
        if board[i][j] == 'O' :
            queue.append((i,j))

zero_board = [['O']*C for _ in range(R)]
if N == 1 :
    pass
elif N%2 == 0 :
    board = zero_board
else :
    #1차 폭발
    board = copy.deepcopy(zero_board)
    bfs(queue)
    bomb1 = copy.deepcopy(board)
    
    #폭탄 위치 넣기
    for i in range(R) :
        for j in range(C) :
            if bomb1[i][j] == 'O' :
                queue.append((i,j))

    #2차 폭발
    board = copy.deepcopy(zero_board)
    bfs(queue)
    bomb2 = copy.deepcopy(board)

    if N%4 == 3 :
        board = bomb1
    else :
        board = bomb2

for x in board :
    print(''.join(x))